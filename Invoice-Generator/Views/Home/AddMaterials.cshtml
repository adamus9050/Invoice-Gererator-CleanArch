@using Application.Dto.Material.MaterialCommand.Add;
@model MaterialSaveCommand
@{
    ViewData["Title"] = "AddMaterials";
}
<link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;900&display=swap" rel="stylesheet">

<div class="g-3">
    @using (Html.BeginForm("SearchMaterials", "Home", FormMethod.Post))
    {
                    <input type="text" name="SearchString" />
                    <input class="btn btn-outline-primary" type="submit" value="Fitruj" /> 

                        <h6>Wpisz nazwę lub cenę materiału</h6> 
    }
    <br/>
    @using (Html.BeginForm("AddMaterials", "Home", FormMethod.Post))
    {
        @*@Html.ValidationSummary()*@

                          <div class="col">
                                        <input type="text" class="form-control" placeholder="Nazwa materiału" @Html.TextBoxFor(x =>x.Name)>
                                        <span asp-validation-for="Name" class="text-danger"></span>
                          </div>
                          <div class="col">
                                        <input type="text" class="form-control" placeholder="Opis (opcjonalnie)" @Html.TextBoxFor(x => x.Description)>
                          </div>
                          <div class="col">
                                        <input type="text" class="form-control" placeholder="Cena" @Html.TextBoxFor(x => x.Price)>
                                        <span asp-validation-for="Price" class="text-danger"></span>
                          </div>
            <br/>
                <button class="btn btn-primary" type="submit">Wyślij formularz</button>
    }
        <p>Zapisane id materiału:</p><strong>@TempData["Materials"]</strong> 
</div>
@section Scripts {
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}